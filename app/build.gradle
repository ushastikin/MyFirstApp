buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        maven {
            jcenter()
            google()
            url "https://maven.appspector.com/artifactory/android-sdk"
        }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
        classpath "com.appspector:android-sdk-plugin:1.0.2"
    }
}

apply plugin: 'com.android.application'
// Put AppSpector plugin after Android plugin
apply plugin: 'com.appspector.sdk'
apply plugin: 'io.fabric'
apply plugin: 'jacoco-android'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven {
        url "https://maven.appspector.com/artifactory/android-sdk"
    }
}

android {
    compileSdkVersion 27
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "com.example.myfirstapp"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:27.1.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    compile 'com.bugsee:bugsee-android:+'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.7@aar') {
        transitive = true
    }
    implementation "com.appspector:android-sdk:1.0.2"
}

task jacocoFix(type: Copy) {
    from 'build/reports/jacoco/jacocoTestDebugUnitTestReport/jacocoTestDebugUnitTestReport.xml'
    into '../'
    rename { String fileName ->
        fileName.replace("jacocoTestDebugUnitTestReport.xml", "jacoco.xml")
    }
    filter { line -> line.replaceAll("com/", "app/src/main/java/com/") }
}
